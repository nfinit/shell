#!/bin/sh
#-----------------------------------------------------------------------------
# NTS shell utilities standard library
#-----------------------------------------------------------------------------
PING_BINARY=$(which ping 2>/dev/null)
USE_PING=$?
FPING_BINARY=$(which fping 2>/dev/null)
USE_FPING=$?
FPING_TIMEOUT_MS=100
#-----------------------------------------------------------------------------

check_term () {
  echo 0
}

term_msg_bold () {
  tput bold 2>/dev/null
  printf "$1"
  tput sgr0 2>/dev/null
}

term_msg_ok () {
  tput bold 2>/dev/null
  tput setaf 2 2>/dev/null
  printf "$1"
  tput sgr0 2>/dev/null
}

term_msg_warn () {
  tput bold 2>/dev/null
  tput setaf 3 2>/dev/null
  printf "$1"
  tput sgr0 2>/dev/null
}

term_msg_error () {
  tput bold 2>/dev/null
  tput setaf 1 2>/dev/null
  printf "$1"
  tput sgr0 2>/dev/null
}

unique_users () {
  users | sed 's/ /\n/g' | uniq
}

count_unique_users () {
  unique_users | wc -l
}

check_host_alive () {
  if [ "$USE_FPING" -eq 0 ]; then
  # fping is a faster method, but not always available
    $FPING_BINARY -q -r 0 -t $FPING_TIMEOUT_MS "$1"
    echo $?
    return $?
  elif [ "$USE_PING" -eq 0 ]; then
  # fall back to attempting default ping method
    $PING_BINARY -w 1 -c 1 "$1" > /dev/null
    echo $?
    return $?
  fi
  echo "2"
  return 2 
}

check_host_port () {
  if [ -f $(which nc) ]; then
    nc -z -w 1 "$1" "$2" > /dev/null
    echo $?
    return $?
  fi
}

text_remove_excess_spaces () {
  echo "$1" | sed "s/  */ /g"
}
